apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
  name: project-cluster
  region: $REGION
  version: "1.30"
  tags:
    project: app

vpc:
  clusterEndpoints:
    privateAccess: true 
    publicAccess: false
  subnets:
    private:
$SUBNETS

iam:
  withOIDC: true
  serviceAccounts:
    - metadata:
        name: cluster-autoscaler
        namespace: kube-system
      wellKnownPolicies:
        autoScaler: true
    - metadata:
        name: aws-load-balancer-controller
        namespace: kube-system
      wellKnownPolicies:
        awsLoadBalancerController: true

managedNodeGroups:
  - name: project-mng-app
    instanceName: project-node-app
    instanceType: c5.large
    amiFamily: Bottlerocket
    privateNetworking: true
    minSize: 2
    maxSize: 32
    desiredCapacity: 2
    tags:
      project: app
    taints:
      - key: dedicated
        effect: NoSchedule
        value: app
  - name: project-mng-addon
    instanceName: project-node-addon
    instanceType: c5.large
    amiFamily: Bottlerocket
    privateNetworking: true
    minSize: 2
    maxSize: 32
    desiredCapacity: 2
    tags:
      project: app
    taints:
      - key: dedicated
        effect: NoSchedule
        value: addon

cloudWatch:
  clusterLogging:
    enableTypes:
      - all

secretsEncryption:
  keyARN: $KEY_ARN

addons:
  - name: vpc-cni
    configurationValues: |-
      {
        "env": {
          "POD_SECURITY_GROUP_ENFORCING_MODE": "standard",
          "ENABLE_POD_ENI": "true"
        }
      }
  - name: coredns
    configurationValues: |-
      {
        "tolerations": [{
          "key": "dedicated",
          "effect": "NoSchedule",
          "operator": "Equal",
          "value": "addon"
        }]
      }
  - name: amazon-cloudwatch-observability
    attachPolicyARNs:
      - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
    configurationValues: |-
      {
        "tolerations": [{
          "operator": "Exists"
        }]
      }
  - name: eks-pod-identity-agent
    configurationValues: |-
      {
        "tolerations": [{
          "key": "dedicated",
          "effect": "NoSchedule",
          "operator": "Equal",
          "value": "addon"
        }]
      }
  - name: aws-efs-csi-driver
    configurationValues: |-
      {
        "controller": {
          "tolerations": [{
            "key": "dedicated",
            "effect": "NoSchedule",
            "operator": "Equal",
            "value": "addon"
          }]
        },
        "node": {
          "tolerations": [{
            "key": "dedicated",
            "effect": "NoSchedule",
            "operator": "Equal",
            "value": "addon"
          }]
        }
      }

karpenter:
  version: '0.37.0'
  createServiceAccount: true
  withSpotInterruptionQueue: true
